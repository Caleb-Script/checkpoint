services:
  postgres:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${APP_DB_PASSWORD}
      POSTGRES_DB: postgres
      TZ: Europe/Berlin
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      retries: 5
    volumes:
      - type: bind
        source: ../volumes/postgres/app/data
        target: /var/lib/postgresql/data
      - type: bind
        source: ../volumes/postgres/app/initdb
        target: /docker-entrypoint-initdb.d
    networks:
      - checkpoint-net

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      TZ: Europe/Berlin
    ports:
      - "8081:80" # http://localhost:8081
    depends_on:
      - postgres
    networks:
      - checkpoint-net

  keycloak:
    image: quay.io/keycloak/keycloak:25.0
    container_name: keycloak
    command: start-dev --import-realm
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KC_DB_URL_HOST: postgres
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: keycloakdb
      KC_HEALTH_ENABLED: "true"
      KC_METRICS_ENABLED: "false"
    volumes:
      - type: bind
        source: ../volumes/keycloak/import
        target: /opt/keycloak/data/import
    networks:
      - checkpoint-net
  
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    hostname: zookeeper
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181", "|", "grep", "imok"]
      interval: 5s
      timeout: 2s
      retries: 5
      start_period: 5s
    networks:
      - checkpoint-net

  kafka:
    depends_on:
      zookeeper:
        condition: service_healthy
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    hostname: kafka
    healthcheck:
      test: ["CMD", "bash", "-c", "nc -z localhost 9092"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${KAFKA_ADVERTISED_HOST_NAME}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    # command: sh -c "export KAFKA_ADVERTISED_HOST_NAME=$(hostname); /usr/bin/start-kafka.sh"
    networks:
      - checkpoint-net

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDIS_PASSWORD}"]
    volumes:
      - type: bind
        source: ../volumes/redis/data
        target: /data
    networks:
      - checkpoint-net

networks:
  checkpoint-net:
    name: checkpoint-net
